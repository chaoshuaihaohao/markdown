!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DTD	E,entity	/entities/
!_TAG_KIND_DESCRIPTION!DTD	a,attribute	/attributes/
!_TAG_KIND_DESCRIPTION!DTD	e,element	/elements/
!_TAG_KIND_DESCRIPTION!DTD	n,notation	/notations/
!_TAG_KIND_DESCRIPTION!DTD	p,parameterEntity	/parameter entities/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!DTD	0.0	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/hao/github/markdown/ipc/eventfd/module_b/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!DTD!element	attOwner	/attributes owner/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	condition	/conditions/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	elementName	/element names/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	partOfAttDef	/part of attribute definition/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
B_ACTIVE_EVENTFD	module_b.c	/^#define B_ACTIVE_EVENTFD /;"	d	file:
B_IO	module_b.c	/^#define B_IO /;"	d	file:
B_SEND_TUN_FD	module_b.c	/^#define B_SEND_TUN_FD /;"	d	file:
B_SET_KICKFD	module_b.c	/^#define B_SET_KICKFD /;"	d	file:
B_WR_EVENTFD	module_b.c	/^#define B_WR_EVENTFD /;"	d	file:
INCLUDE_VERMAGIC	module_b.mod.c	/^#define INCLUDE_VERMAGIC$/;"	d	file:
KERNELDIR	Makefile	/^KERNELDIR ?=\/lib\/modules\/$(shell uname -r)\/build$/;"	m
PWD	Makefile	/^PWD := $(shell pwd)$/;"	m
VHOST_WORK_QUEUED	module_b.c	/^#define VHOST_WORK_QUEUED /;"	d	file:
____versions	module_b.mod.c	/^static const struct modversion_info ____versions[]$/;"	v	typeref:typename:const struct modversion_info[]__used __section ("__versions")	file:
assign_eventfd	module_b.c	/^static int assign_eventfd(int fd)$/;"	f	typeref:typename:int	file:
assign_kickfd	module_b.c	/^static int assign_kickfd(int fd)$/;"	f	typeref:typename:int	file:
clean	Makefile	/^clean:$/;"	t
default	Makefile	/^default:$/;"	t
dev	module_b.c	/^        struct vhost_test_dev        *dev;$/;"	m	struct:vhost_test_poll	typeref:struct:vhost_test_dev *	file:
eventfd	module_b.c	/^static struct eventfd_ctx *eventfd = NULL;$/;"	v	typeref:struct:eventfd_ctx *	file:
flags	module_b.c	/^        unsigned long           flags;$/;"	m	struct:vhost_test_work	typeref:typename:unsigned long	file:
fn	module_b.c	/^        vhost_test_work_fn_t    fn;$/;"	m	struct:vhost_test_work	typeref:typename:vhost_test_work_fn_t	file:
get_tap_socket	module_b.c	/^static struct socket *get_tap_socket(int fd)$/;"	f	typeref:struct:socket *	file:
handle_tx_kick	module_b.c	/^static int handle_tx_kick(struct vhost_test_work *work)$/;"	f	typeref:typename:int	file:
mask	module_b.c	/^        __poll_t                mask;$/;"	m	struct:vhost_test_poll	typeref:typename:__poll_t	file:
node	module_b.c	/^        struct llist_node       node;$/;"	m	struct:vhost_test_work	typeref:struct:llist_node	file:
obj-m	Makefile	/^obj-m := module_b.o$/;"	m
push_count2skb	module_b.c	/^static int push_count2skb(__u64 *buf)$/;"	f	typeref:typename:int	file:
sock	module_b.c	/^static struct socket *sock = NULL;$/;"	v	typeref:struct:socket *	file:
table	module_b.c	/^        poll_table              table;$/;"	m	struct:vhost_test_poll	typeref:typename:poll_table	file:
thread	module_b.c	/^static struct task_struct *thread;$/;"	v	typeref:struct:task_struct *	file:
use_worker	module_b.c	/^        bool use_worker;$/;"	m	struct:vhost_test_dev	typeref:typename:bool	file:
vhost_test_dev	module_b.c	/^struct vhost_test_dev {$/;"	s	file:
vhost_test_exit	module_b.c	/^static void __exit vhost_test_exit(void)  $/;"	f	typeref:typename:void __exit	file:
vhost_test_fops	module_b.c	/^static const struct file_operations vhost_test_fops = {  $/;"	v	typeref:typename:const struct file_operations	file:
vhost_test_init	module_b.c	/^static int __init vhost_test_init(void)  $/;"	f	typeref:typename:int __init	file:
vhost_test_ioctl	module_b.c	/^static long vhost_test_ioctl(struct file *filp, unsigned int ioctl, unsigned long arg)$/;"	f	typeref:typename:long	file:
vhost_test_kthread_fn	module_b.c	/^static int vhost_test_kthread_fn(void *arg)$/;"	f	typeref:typename:int	file:
vhost_test_miscdev	module_b.c	/^static struct miscdevice vhost_test_miscdev = {  $/;"	v	typeref:struct:miscdevice	file:
vhost_test_open	module_b.c	/^static int vhost_test_open(struct inode *inode, struct file *file)  $/;"	f	typeref:typename:int	file:
vhost_test_poll	module_b.c	/^struct vhost_test_poll {$/;"	s	file:
vhost_test_poll_func	module_b.c	/^static void vhost_test_poll_func(struct file *file, wait_queue_head_t *wqh,$/;"	f	typeref:typename:void	file:
vhost_test_poll_init	module_b.c	/^void vhost_test_poll_init(struct vhost_test_poll *poll, vhost_test_work_fn_t fn,$/;"	f	typeref:typename:void
vhost_test_poll_queue	module_b.c	/^void vhost_test_poll_queue(struct vhost_test_poll *poll)$/;"	f	typeref:typename:void
vhost_test_poll_start	module_b.c	/^static int vhost_test_poll_start(struct vhost_test_poll *poll, struct file *file)$/;"	f	typeref:typename:int	file:
vhost_test_poll_stop	module_b.c	/^void vhost_test_poll_stop(struct vhost_test_poll *poll)$/;"	f	typeref:typename:void
vhost_test_poll_wakeup	module_b.c	/^static int vhost_test_poll_wakeup(wait_queue_entry_t *wait, unsigned mode, int sync,$/;"	f	typeref:typename:int	file:
vhost_test_release	module_b.c	/^static int vhost_test_release(struct inode *inode, struct file *file)  $/;"	f	typeref:typename:int	file:
vhost_test_work	module_b.c	/^struct vhost_test_work {$/;"	s	file:
vhost_test_work_fn_t	module_b.c	/^typedef void (*vhost_test_work_fn_t)(struct vhost_test_work *work);$/;"	t	typeref:typename:void (*)(struct vhost_test_work * work)	file:
vhost_test_work_init	module_b.c	/^static void vhost_test_work_init(struct vhost_test_work *work, vhost_test_work_fn_t fn)$/;"	f	typeref:typename:void	file:
vhost_test_work_queue	module_b.c	/^void vhost_test_work_queue(struct vhost_test_dev *dev, struct vhost_test_work *work)$/;"	f	typeref:typename:void
wait	module_b.c	/^        wait_queue_entry_t      wait;$/;"	m	struct:vhost_test_poll	typeref:typename:wait_queue_entry_t	file:
wait	module_b.c	/^        wait_queue_head_t wait;$/;"	m	struct:vhost_test_dev	typeref:typename:wait_queue_head_t	file:
work	module_b.c	/^        struct vhost_test_work       work;$/;"	m	struct:vhost_test_poll	typeref:struct:vhost_test_work	file:
work_list	module_b.c	/^        struct llist_head work_list;$/;"	m	struct:vhost_test_dev	typeref:struct:llist_head	file:
worker	module_b.c	/^        struct task_struct *worker;$/;"	m	struct:vhost_test_dev	typeref:struct:task_struct *	file:
wqh	module_b.c	/^        wait_queue_head_t       *wqh;$/;"	m	struct:vhost_test_poll	typeref:typename:wait_queue_head_t *	file:
